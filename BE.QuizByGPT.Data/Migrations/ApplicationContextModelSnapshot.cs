// <auto-generated />
using System;
using BE.QuizByGPT.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BE.QuizByGPT.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuestionAnswerModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<Guid?>("QuestionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionModelId");

                    b.ToTable("QuestionAnswer");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuestionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("QuizModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuizModelId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuizModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuestionsCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuizSessionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentQuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizSession");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.UserAnswerModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("UserSessionId");

                    b.ToTable("UserAnswer");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.UserSessionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserSession");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.UserSessionQuizSessionModel", b =>
                {
                    b.Property<Guid>("QuizSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsUserReady")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("QuizSessionId", "UserSessionId");

                    b.HasIndex("UserSessionId");

                    b.ToTable("UserSessionQuizSession", (string)null);
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuestionAnswerModel", b =>
                {
                    b.HasOne("BE.QuizByGPT.BLL.Models.QuestionModel", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionModelId");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuestionModel", b =>
                {
                    b.HasOne("BE.QuizByGPT.BLL.Models.QuizModel", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuizModelId");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuizSessionModel", b =>
                {
                    b.HasOne("BE.QuizByGPT.BLL.Models.QuestionModel", "CurrentQuestion")
                        .WithMany()
                        .HasForeignKey("CurrentQuestionId");

                    b.HasOne("BE.QuizByGPT.BLL.Models.QuizModel", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentQuestion");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.UserAnswerModel", b =>
                {
                    b.HasOne("BE.QuizByGPT.BLL.Models.QuestionAnswerModel", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.QuizByGPT.BLL.Models.UserSessionModel", "UserSession")
                        .WithMany()
                        .HasForeignKey("UserSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("UserSession");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.UserSessionQuizSessionModel", b =>
                {
                    b.HasOne("BE.QuizByGPT.BLL.Models.QuizSessionModel", "QuizSession")
                        .WithMany("UserSessionQuizSession")
                        .HasForeignKey("QuizSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.QuizByGPT.BLL.Models.UserSessionModel", "UserSession")
                        .WithMany("UserSessionQuizSession")
                        .HasForeignKey("UserSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizSession");

                    b.Navigation("UserSession");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuestionModel", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuizModel", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.QuizSessionModel", b =>
                {
                    b.Navigation("UserSessionQuizSession");
                });

            modelBuilder.Entity("BE.QuizByGPT.BLL.Models.UserSessionModel", b =>
                {
                    b.Navigation("UserSessionQuizSession");
                });
#pragma warning restore 612, 618
        }
    }
}
